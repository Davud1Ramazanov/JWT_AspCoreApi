// <auto-generated />
using System;
using JWT_AspCoreApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JWTAspCoreApi.Migrations
{
    [DbContext(typeof(GadgetstoreDbContext))]
    [Migration("20230117184634_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JWT_AspCoreApi.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameGadgets")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NAME_GADGETS");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC27043F5BF7");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("JWT_AspCoreApi.Model.Gadget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("ID_Category");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Gadgets__3214EC277693E42C");

                    b.HasIndex("IdCategory");

                    b.ToTable("Gadgets");
                });

            modelBuilder.Entity("JWT_AspCoreApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JWT_AspCoreApi.Model.Gadget", b =>
                {
                    b.HasOne("JWT_AspCoreApi.Model.Category", "IdCategoryNavigation")
                        .WithMany("Gadgets")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK__Gadgets__ID_Cate__72C60C4A");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("JWT_AspCoreApi.Model.Category", b =>
                {
                    b.Navigation("Gadgets");
                });
#pragma warning restore 612, 618
        }
    }
}
